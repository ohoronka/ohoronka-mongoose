author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

config_schema:
  - ["device.listen_ports", "i", 123, {title: "Bit mask of listen ports"}]
  - ["mqtt.server", "ohoronka.com:1883"] #"192.168.7.115:1883"] #"ohoronka.com:1883"]
  - ["mqtt.enable", true]
  - ["mqtt.client_id", "4"] # ?
  - ["mqtt.user", "4"]
  - ["mqtt.pass", "4osADLHYukC50mNiypEPBQ1qZPkGMw1WpWJZE4eQ"]
  - ["device.id", "4"] # ?
  - ["device.password", "4osADLHYukC50mNiypEPBQ1qZPkGMw1WpWJZE4eQ"] # ?
#  - ["device.gpio_listen", "i", 12336, {title: "Listen GPIO ports"}]
#  - ["device.gpio_pull", "i", 0, {title: "Listen GPIO ports pull"}]
#  - ["debug.stderr_topic", ""]
#  - ["debug.stdout_topic", ""]
#  - ["update.enable_post", false]
#  - ["sntp.enable", false]
#  - ["rpc.ws.enable", false]
  - ["http.enable", false]
  - ["wifi.ap.ssid", "ohoronka4"]
  - ["wifi.ap.pass", "12345678"]
  - ["wifi.ap.enable", false]


# List of libraries used by this app, in order of initialisation
libs:
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/rpc-mqtt
  - origin: https://github.com/mongoose-os-libs/http-server
  - origin: https://github.com/mongoose-os-libs/rpc-service-ota

#  - origin: https://github.com/mongoose-os-libs/http-server
#  - origin: https://github.com/mongoose-os-libs/ota-http-server
#  - origin: https://github.com/mongoose-os-libs/rpc-loopback
#  - origin: https://github.com/mongoose-os-libs/rpc-mqtt
#  - origin: https://github.com/mongoose-os-libs/rpc-service-config
#  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
#  - origin: https://github.com/mongoose-os-libs/rpc-service-gpio
#  - origin: https://github.com/mongoose-os-libs/rpc-service-i2c
#  - origin: https://github.com/mongoose-os-libs/rpc-service-ota
#  - origin: https://github.com/mongoose-os-libs/rpc-uart
#  - origin: https://github.com/mongoose-os-libs/spi
#  - origin: https://github.com/mongoose-os-libs/vfs-dev-spi-flash
#  - origin: https://github.com/mongoose-os-libs/wifi
#  - origin: https://github.com/mongoose-os-libs/rpc-common

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-05-18
